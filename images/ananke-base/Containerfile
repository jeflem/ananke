FROM docker.io/library/debian@sha256:22cc4de537485807b7efe6f4c942d7460c4482852f49434f9c022c044c545a90

ARG DEBIAN_FRONTEND=noninteractive
ARG TERM=linux

ARG JUPYTERHUB_VERSION=4.0.2
ARG JUPYTERLAB_VERSION=4.0.7
ARG NOTEBOOK_VERSION=7.0.6
ARG LTIAUTHENTICATOR_VERSION=1.6.1
ARG SYSTEMDSPAWNER_VERSION=1.0.1
ARG PYTHON_VERSION=3.11.6

RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    git \
    gpg \
    less \
    libnss-systemd \
    nano \
    systemd \
    systemd-container && \
    rm -rf /var/lib/apt/lists/*

# add conda repo key
WORKDIR /tmp
RUN curl -o conda.asc https://repo.anaconda.com/pkgs/misc/gpgkeys/anaconda.asc && \
    cat conda.asc | gpg --dearmor > conda.gpg && \
    install -o root -g root -m 644 conda.gpg /usr/share/keyrings/conda-archive-keyring.gpg && \
    rm conda.asc &&  \
    rm conda.gpg

# check conda repo key's fingerprint
RUN gpg --keyring /usr/share/keyrings/conda-archive-keyring.gpg --no-default-keyring --fingerprint 34161F5BF5EB1D4BFBBB8F0A8AEB4F8B29D82806

# add conda repo
RUN echo "deb [arch=amd64 signed-by=/usr/share/keyrings/conda-archive-keyring.gpg] https://repo.anaconda.com/pkgs/misc/debrepo/conda stable main" > /etc/apt/sources.list.d/conda.list

# install conda
RUN apt-get update && \
    apt-get install -y --no-install-recommends conda

# update conda
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    conda update -n base -c anaconda -y conda"

# make conda-forge the default channel
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    conda config --prepend channels conda-forge"
    
# create conda envs
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    conda create -n jhub -y; \
    conda create -n python3 -y"

# install conda packages
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    conda activate jhub; \
    conda install -y \
    jupyterhub=$JUPYTERHUB_VERSION \
    jupyterlab=$JUPYTERLAB_VERSION \
    nb_conda_kernels \
    notebook=$NOTEBOOK_VERSION \
    pycurl \
    python=$PYTHON_VERSION"
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    conda activate python3; \
    conda install -y \
    ipykernel \
    python=$PYTHON_VERSION"

# install pip packages
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    conda activate jhub; \
    pip install \
    jupyterhub-idle-culler \
    jupyterhub-ltiauthenticator==$LTIAUTHENTICATOR_VERSION \
    jupyterhub-systemdspawner==$SYSTEMDSPAWNER_VERSION \
    nbgitpuller"

# fix nb_conda_kernels install (remove unused outdated config file),
# modify display name of python3 env's kernel,
# disable jhub env's kernel,
# update kernel list for JupyterLab
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    rm /opt/conda/envs/jhub/etc/jupyter/jupyter_config.json; \
    conda activate python3; \
    python -m ipykernel install --prefix=/opt/conda/envs/python3/ --display-name 'Python 3 (all users)'; \
    conda activate jhub; \
    jupyter kernelspec remove -y python3; \
    python -m nb_conda_kernels list \
                               --CondaKernelSpecManager.kernelspec_path='--sys-prefix' \
                               --CondaKernelSpecManager.name_format='{display_name}'"

# copy JupyterHub config files
COPY ./assets/jupyterhub_config.py /opt/conda/envs/jhub/etc/jupyterhub/jupyterhub_config.py
COPY ./assets/jupyter_config.py /opt/conda/envs/jhub/etc/jupyter/jupyter_config.py
COPY ./assets/jupyterhub.service /opt/conda/envs/jhub/etc/systemd/jupyterhub.service

# create systemd service for JupyterHub
RUN ln -s /opt/conda/envs/jhub/etc/systemd/jupyterhub.service /etc/systemd/system/jupyterhub.service
RUN systemctl enable jupyterhub.service

# make python3 the default conda env for all terminals
RUN echo "PS1=\"\w$ \"" >> /etc/bash.bashrc && \
    echo "source /opt/conda/etc/profile.d/conda.sh" >> /etc/bash.bashrc && \
    echo "conda activate python3" >> /etc/bash.bashrc

# copy install scripts for optional python packages    
COPY ./assets/install /opt/install
RUN chmod 755 /opt/install
RUN chmod 644 /opt/install/*
RUN chmod 744 /opt/install/*.sh
    
# initialize user_data.json
WORKDIR /opt
RUN touch user_data.json && \
    echo "{}" >> user_data.json && \
    chmod 600 user_data.json

# copy boot script and create systemd service for boot script
COPY ./assets/boot.sh /opt/boot.sh
RUN chmod 700 /opt/boot.sh
COPY ./assets/boot_script.service /etc/systemd/system/boot_script.service
RUN systemctl enable boot_script.service

# clean package caches
RUN bash -c "source /opt/conda/etc/profile.d/conda.sh; \
    conda clean -p -t" && \
    apt-get clean

# disable root login (should be disabled by default, just to be sure...)
RUN passwd -l root

WORKDIR /

EXPOSE 8000

ENTRYPOINT ["/lib/systemd/systemd"]
